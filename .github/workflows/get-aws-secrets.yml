name: Retrieve Secrets from AWS

on:
  workflow_call:
    inputs:
      environment:
        description: environment
        required: true
        type: string
    outputs:
      aws_secrets:
        description: The required AWS Secrets in JSON
        value: ${{ jobs.get-aws-secrets.outputs.aws_secrets }}

jobs:
  get-aws-secrets:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      aws_secrets: ${{ steps.aws-secrets.outputs.aws_secrets }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: github_manual_terraform_job
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Retrieve and Process AWS Secrets
        id: aws-secrets
        run: |
          global_secret_names=$(aws secretsmanager list-secrets \
                            --region ${{ secrets.AWS_REGION }} \
                            --query "SecretList[?starts_with(Name, 'nia-global')].Name" \
                            --output text)
          
          environment_secret_names=$(aws secretsmanager list-secrets \
                            --region ${{ secrets.AWS_REGION }} \
                            --query "SecretList[?starts_with(Name, 'nia-${{ inputs.environment }}')].Name" \
                            --output text)
          
          combined_secret_names=($global_secret_names $environment_secret_names)
          
          declare -A secrets_map
          secrets_json=$(echo '{}' | jq '.')
          
          for secret_name in "${combined_secret_names[@]}"; do
            raw_secret_value=$(aws secretsmanager get-secret-value \
                                --region ${{ secrets.AWS_REGION }} \
                                --secret-id ${secret_name} \
                                --query SecretString --output text)
          
            if [[ "$secret_name" == *"-kvp" ]]; then
              echo "Processing -kvp secret: $secret_name"
          
              # Parse the secret value as JSON and extract each key-value pair
              kvp_map=$(echo "$raw_secret_value" | jq -r 'to_entries | map("\(.key)=\(.value | @sh)") | .[]')
          
              for kvp in $kvp_map; do
                key=$(echo "$kvp" | cut -d'=' -f1)
                value=$(echo "$kvp" | cut -d'=' -f2-)
                if [[ -n "$key" && -n "$value" ]]; then
                  secrets_json=$(echo "$secrets_json" | jq -c --arg key "$key" --arg value "$value" '.[$key] = ($value | fromjson? // $value)')
                fi
              done
            else
              secrets_map["$secret_name"]="$raw_secret_value"
            fi
          done
          
          echo "aws_secrets=$secrets_json" >> $GITHUB_OUTPUT